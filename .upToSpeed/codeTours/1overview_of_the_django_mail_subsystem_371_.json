{
  "title": "Overview of the Django mail subsystem",
  "id": "r+xb82lq1ZroDzQZCViWUo0QpBdC5OhTUpo/lxBFTQI=",
  "steps": [
    {
      "type": "revealFiles",
      "files": ["django/core/mail/__init__.py"],
      "description": "Welcome to the **Django** Mail Subsystem Case Study! \n\n The mail subsystem is located in the `django/core/mail` folder.",
      "title": "",
      "id": "4293"
    },
    {
      "type": "revealFiles",
      "file": "django/core/mail/backends/base.py",
      "description": "The two primary datatypes of the mail subsystem are `BaseEmailBackend` and `EmailMessage`*(later)*.\n\n An e-mail backend is a method of sending e-mail messages. Options include printing the e-mail to the command line or a file, doing nothing, as well as sending it for real using SMTP.\n\n These are provided by the various subclasses of `BaseEmailBackend` in the `backends` folder.",
      "title": "",
      "highlight": [{ "start": 4, "end": 59 }],
      "id": "4312"
    },
    {
      "type": "revealFiles",
      "file": "django/core/mail/backends/base.py",
      "description": "The two primary datatypes of the mail subsystem are `BaseEmailBackend` and `EmailMessage`*(later)*.\n\n An e-mail backend is a method of sending e-mail messages. Options include printing the e-mail to the command line or a file, doing nothing, as well as sending it for real using SMTP.\n\n These are provided by the various subclasses of `BaseEmailBackend` in the `backends` folder. The chief method of an e-mail backend implementation is `send_messages`.",
      "title": "",
      "highlight": [{ "start": 54, "end": 59 }],
      "id": "1338"
    },
    {
      "type": "highlight",
      "file": "django/core/mail/backends/smtp.py",
      "description": "By default for network-based backends, each invocation of `send_messages` will open a separate network connection; however, through the `open` and `close` methods, code using e-mail backends may batch many groups of messages across the same connection.",
      "highlight": [{ "start": 95, "end": 115 }],
      "title": "",
      "id": "1337"
    },

    {
      "type": "highlight",
      "description": "The `EmailMessage` class consists of standard e-mail headers (`from`, `to`, `CC`, `BCC`, `subject`, etc), `body`, and `attachments` functionality to add/get data to/from it by modifying public fields.",
      "file": "django/core/mail/message.py",
      "highlight": [{ "start": 195, "end": 243 }],
      "title": "",
      "id": "merged_4315_4313"
    },
    {
      "type": "highlight",
      "description": "And the ability to send the e-mail through a backend determined by the settings(next step).",
      "file": "django/core/mail/message.py",
      "highlight": [{ "start": 285, "end": 291 }],
      "title": "",
      "id": "4316"
    },
    {
      "type": "highlight",
      "description": "You may find it helpful to read **[Wikipedia](https://en.wikipedia.org/wiki/Email#Message_format)** on the e-mail message format, or this **[more detailed summary](https://github.com/jeremyheiler/lime/wiki/Summary-of-RFC-5322)**.",
      "file": "django/core/mail/__init__.py",
      "highlight": [{ "start": 26, "end": 35 }],
      "title": "",
      "id": "4307"
    },
    {
      "type": "textOnly",
      "description": "Now you are ready to dive into the questions.\nFeel free to browse the codebase as your leasure or take one of the more indepth codetours for key files.",
      "title": "",
      "id": "4298"
    }
  ]
}
